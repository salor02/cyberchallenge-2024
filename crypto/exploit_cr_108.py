#!/usr/bin/env python2.7

from Crypto.Cipher import AES
from binascii import hexlify
import string

key_string = "yn9RB3Lr43xJK2"
alfabeto = string.ascii_letters+'0123456789'

temp_key = []

for l in alfabeto:
    for l2 in alfabeto:
        temp_key.append(key_string + l + l2)
print(len(temp_key))


res = []

msg2 = hexlify('very unbreakable'.encode()).decode()
msg2 = int('0x' + msg2, 16)

fake_IV = 'aaaaaaaaaaaaaaaa'
fake_IV_hex = hexlify(fake_IV.encode()).decode()
fake_IV_hex = int('0x' + fake_IV_hex, 16)

for key in temp_key:
    aes = AES.new(key.encode(), AES.MODE_CBC, fake_IV.encode())

    temp_res = hexlify(aes.decrypt(bytes.fromhex('78c670cb67a9e5773d696dc96b78c4e0'))).decode()
    temp_res = int('0x' + temp_res, 16)

    no_iv_c = int(hex(fake_IV_hex ^ temp_res), 16)
    cyp_block_1 = hex(no_iv_c ^ msg2)
    #temp_res = bytes(a ^ b for a, b in zip(temp_res, aes.iv))
    #temp_res = bytes(a ^ b for a, b in zip(temp_res, msg2))
    res.append({'cyp':cyp_block_1[2:], 'key':key})

#print(res)

for c in res:
    sub1 = c['cyp'][28:]
    if sub1 == 'd49e':
        print(c)

# output:
# c5██████████████████████████d49e78c670cb67a9e5773d696dc96b78c4e0


