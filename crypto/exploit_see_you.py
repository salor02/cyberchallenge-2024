#!/usr/bin/python3

import string
import base64

#from secret import KEY

def encrypt(clear, key):
  enc = []
  for i in range(len(clear)):
    key_c = key[i % len(key)]
    enc_c = chr((ord(clear[i]) + ord(key_c)) % 128)
    enc.append(enc_c)
  return str(base64.urlsafe_b64encode("".join(enc).encode('ascii')), 'ascii')

# For debug purpose
def decrypt(enc, key):
    dec = []
    enc = str(base64.urlsafe_b64decode(enc.encode('ascii')), 'ascii')
    for i in range(len(enc)):
        key_c = key[i % len(key)]
        dec_c = chr((128 + ord(enc[i]) - ord(key_c)) % 128)
        dec.append(dec_c)
    return "".join(dec)
 
KEY = 'ciaobell'

print("flag: CCIT{%s}" % KEY)

k1 = KEY[0:4]
k2 = KEY[4:8]

m = "See you later in the city center"

alfabeto_minuscolo = string.ascii_lowercase

# Genera tutte le possibili stringhe di 4 caratteri minuscoli dell'alfabeto
combinazioni = []
for c1 in alfabeto_minuscolo:
    for c2 in alfabeto_minuscolo:
        for c3 in alfabeto_minuscolo:
            for c4 in alfabeto_minuscolo:
                combinazioni.append(c1 + c2 + c3 + c4)

c1 = set()
d2 = set()
m = "See you later in the city center"
c = "QSldSTQ7HkpIJj9cQBY3VUhbQ01HXD9VRBVYSkE6UWRQS0NHRVE3VUQrTDE="

for k in combinazioni:
    c1.add(encrypt(m, k))
    d2.add(decrypt(c, k))

res = c1.intersection(d2)
print(res)

for k in combinazioni:
    if encrypt(m, k) in res:
        print(k)
    if decrypt(c,k) in res:
        print(k)




