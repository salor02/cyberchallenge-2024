si
si
si
si
si
disass main
b* 0x00000000004011a7
run
si
si
si
si
si
si
si
si
si
si
si
si
si
si
si
si
si
si
si
si
si
si
si
si
si
si
si
si
si
si
si
si
si
ni
si
disass main
b main
run
x/s $ecx
x/s $esp+4
x/s $esp4
x/s $esp
ni
disass getrandom
file
run
file nextgen_safe 
disass getrandom
run
call
call main
call void print_safe_contents(void)
call void print_safe_contents()
call void print_safe_contents
call print_safe_contents
b main
run
call void print_safe_contents()
call (void) print_safe_contents()
disass clock_nanosleep
b main
b entry
run
ni
disass clock_nanosleep
run
ni
jmp 0x4014ba
help
jump 0x4014ba
ni
disass usleep
disass nanosleep
ni
frame
jump 0x401494
jump *0x401494
ni
run
ni
jump *0x4014ba
ni
run
disass clock_nanosleep
ni
si
ni
run
ni
si
ni
si
info registers
x/i $edi
x/d $edi
print &useconds
$edi
si
info registers
si
info registers
frame
si
si
si
si
si
si
si
si
si
si
si
si
si
si
si
si
run
ni
si
set $rdi = 0xf42401
frame
set $rdi = 0x001000
si
si
ni
run
ni
si
set $rdi = 0x001000
ni
si
ni
set $rdi = 0x001000
ni
set $rdi = 0x001000
ni
si
set $rdi = 0x001000
ni
run
ni
si
run
run
ni
si
ni
si
ni
run
ni
info registers
ni
run
run
ni
ni
jump *0x555555555187
run
b *0x555555555181
run
jump 0x555555555187
jump *0x555555555187
call 0x555555555169
call *0x555555555169
disass entry
run
backtrace
set args 5
run
file flag_checker 
run
backtrace
set args 5
run
backtrace
b 0x000055555555520a
b *0x000055555555520a
run
ni
ni
backtrace
set args -5
run
backtrace
gdb disass 0x000055555555520a
disass 0x000055555555520a
frame
jump *0x000055555555520a
jump *0x000055555555520a
run
disass 0x555555555169 
disass 0x555555555169 
disass *0x555555555169 
call 0x555555555169 
run
$param1
x/s $param1
x/d $param1
x/s $param1
x/s $param1324
x/s param1324
x/s param1
b *0x00101169
run
info symbol addr
info symbol
gdb disass
disass
disass __libc_start_main
disass __libc_start_main()
bt full
info local
backtrace
set args ciao
run
set args ciao
run
bt
set args ciao
b *0x000055555555520a
run
run
b *0x55555555517d
run
si
set $eax = 0x63
info registers
si
set $eax = 0x54
si
si
b abort
set args ciao
b abort
run
b abort
run
bt
info frame
set print frame-arguments all
bt
set args ciao
set print frame-arguments all
run
bt
